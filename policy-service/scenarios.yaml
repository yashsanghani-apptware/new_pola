- scenarioID: "1"
  Description: "Complex grouping with all, any, and none"
  Condition:
    match:
      all:
        of:
          - expr: "user.age > 25"
          - expr: "user.experienceYears >= 5"
          - none:
              of:
                - expr: "resource.accessLevel === 'public'"
                - expr: "context.isHoliday && system.maintenanceMode"
          - any:
              of:
                - expr: "context.weekDay === 'Friday'"
                - expr: "system.uptime > 200"
  Expected: false
  Explanation: "All conditions must be true: the user is over 25, has at least 5 years of experience, the resource is not public, and it's either Friday or system uptime is high."

- scenarioID: "2"
  Description: "Complex ternary operation with nested conditions"
  Condition:
    match:
      expr: "user.role === 'admin' ? (resource.accessLevel === 'confidential' && !context.isHoliday) : (user.permissions.includes('write') && context.timeOfDay === 'day')"
  Expected: false
  Explanation: "The ternary condition checks the user's role; since it's 'admin', it expects the resource to be confidential and not a holiday, but it is a holiday."

- scenarioID: "3"
  Description: "Nested logical and arithmetic operations with all"
  Condition:
    match:
      all:
        of:
          - expr: "(user.age + 10) > 35 && user.experienceYears > 3"
          - expr: "resource.size / 2 < 300"
          - expr: "!system.maintenanceMode && context.currentHour < 20"
  Expected: false
  Explanation: "The maintenance mode is active, so the last condition fails."

- scenarioID: "4"
  Description: "Any conditions with complex nesting"
  Condition:
    match:
      any:
        of:
          - all:
              of:
                - expr: "user.location === 'onsite'"
                - expr: "user.department === 'IT'"
          - none:
              of:
                - expr: "resource.tags.includes('external')"
                - expr: "context.event === 'deployment'"
          - expr: "system.uptime > 300 || context.weekDay === 'Monday'"
  Expected: true
  Explanation: "The scenario passes due to the uptime and day of the week."

- scenarioID: "5"
  Description: "Complex arithmetic and logical grouping"
  Condition:
    match:
      all:
        of:
          - expr: "(resource.size * 2) + 100 > 1100"
          - expr: "(user.experienceYears + user.age) > 30"
          - expr: "context.timeOfDay === 'day' && system.loadAverage < 1.5"
  Expected: false
  Explanation: "The scenario fails because it's not daytime and the arithmetic condition doesn’t hold."

- scenarioID: "6"
  Description: "Nested any and none with arithmetic checks"
  Condition:
    match:
      any:
        of:
          - none:
              of:
                - expr: "user.age < 20"
                - expr: "user.permissions.includes('admin')"
          - expr: "(system.uptime / 10) > 20 && resource.accessLevel === 'confidential'"
  Expected: true
  Explanation: "The scenario passes because the uptime divided by 10 is over 20, and the resource is confidential."

- scenarioID: "7"
  Description: "Multiple nested all and any with complex logic"
  Condition:
    match:
      all:
        of:
          - any:
              of:
                - expr: "user.department === 'Finance'"
                - expr: "context.weekDay === 'Friday'"
          - all:
              of:
                - expr: "resource.owner === 'admin'"
                - expr: "system.loadAverage < 2"
  Expected: true
  Explanation: "The scenario passes because the weekday is Friday, and all other conditions are satisfied."

- scenarioID: "8"
  Description: "Complex none with nested all and arithmetic"
  Condition:
    match:
      none:
        of:
          - expr: "(user.age + user.experienceYears) < 40"
          - all:
              of:
                - expr: "context.isHoliday"
                - expr: "system.maintenanceMode"
  Expected: false
  Explanation: "The scenario fails because it's a holiday and maintenance mode is active."

- scenarioID: "9"
  Description: "Complex logical grouping with ternary operator"
  Condition:
    match:
      expr: "(user.role === 'admin' ? (system.loadAverage < 1.5 && context.timeOfDay !== 'night') : (resource.accessLevel === 'public'))"
  Expected: false
  Explanation: "The ternary condition fails because the load average is above 1.5 and it's nighttime."

- scenarioID: "10"
  Description: "All conditions with nested any and logical operations"
  Condition:
    match:
      all:
        of:
          - expr: "user.permissions.includes('write')"
          - any:
              of:
                - expr: "resource.size > 1000"
                - expr: "system.uptime > 100"
          - expr: "!context.isHoliday"
  Expected: false
  Explanation: "The scenario fails because it’s a holiday."

- scenarioID: "11"
  Description: "Complex nested logical and arithmetic conditions"
  Condition:
    match:
      all:
        of:
          - expr: "(resource.size * 2) > 1000 && user.location === 'remote'"
          - expr: "context.weekDay !== 'Sunday'"
          - none:
              of:
                - expr: "user.permissions.includes('delete')"
                - expr: "system.maintenanceMode"
  Expected: false
  Explanation: "The scenario fails due to maintenance mode being active."

- scenarioID: "12"
  Description: "Nested any with complex arithmetic and logical checks"
  Condition:
    match:
      any:
        of:
          - expr: "(system.uptime / 10) < 30"
          - expr: "context.currentHour > 22 && resource.type === 'image'"
  Expected: true
  Explanation: "The scenario passes because it’s late at night and the resource is an image."

- scenarioID: "13"
  Description: "All conditions with complex nested grouping"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.tags.includes('internal')"
          - none:
              of:
                - expr: "context.event === 'incident'"
                - expr: "system.loadAverage > 2"
  Expected: true
  Explanation: "The scenario passes because the user is an admin, the resource is internal, and the load average is under 2."

- scenarioID: "14"
  Description: "Complex ternary and nested conditions with any"
  Condition:
    match:
      any:
        of:
          - expr: "user.role === 'manager' ? system.uptime < 100 : context.timeOfDay === 'night'"
          - expr: "resource.owner === 'user123'"
  Expected: true
  Explanation: "The scenario passes because the resource owner is 'user123'."

- scenarioID: "15"
  Description: "Complex none with multiple nested conditions"
  Condition:
    match:
      none:
        of:
          - expr: "user.location === 'onsite'"
          - expr: "resource.accessLevel === 'public'"
          - all:
              of:
                - expr: "context.timeOfDay === 'day'"
                - expr: "context.event !== 'maintenance'"
  Expected: true
  Explanation: "The scenario passes because none of the conditions are true."

- scenarioID: "16"
  Description: "Nested all and any with complex arithmetic"
  Condition:
    match:
      all:
        of:
          - expr: "(resource.size / 2) > 200"
          - any:
              of:
                - expr: "system.loadAverage < 1"
                - expr: "user.experienceYears > 10"
          - expr: "context.weekDay !== 'Wednesday'"
  Expected: false
  Explanation: "The scenario fails because it’s not Wednesday, and none of the any conditions pass."

- scenarioID: "17"
  Description: "Complex logical and arithmetic grouping with ternary"
  Condition:
    match:
      expr: "(user.permissions.includes('admin') ? system.uptime > 200 : context.isHoliday) && resource.owner === 'admin'"
  Expected: true
  Explanation: "The scenario passes because the user has admin permissions, system uptime is over 200, and the resource is owned by an admin."

- scenarioID: "18"
  Description: "All conditions with nested any and ternary operations"
  Condition:
    match:
      all:
        of:
          - expr: "(user.age * 2) < 60"
          - any:
              of:
                - expr: "system.maintenanceMode"
                - expr: "context.weekDay === 'Saturday'"
          - expr: "resource.tags.includes('projectA')"
  Expected: true
  Explanation: "The scenario passes because the user's age multiplied by 2 is under 60, and the resource tag includes 'projectA'."

- scenarioID: "19"
  Description: "Complex arithmetic and logical grouping with none"
  Condition:
    match:
      none:
        of:
          - expr: "resource.type === 'video'"
          - expr: "(context.currentHour / 2) > 10"
          - expr: "(user.experienceYears + user.age) < 35"
  Expected: false
  Explanation: "The scenario fails because the user's combined age and experience is under 35."

- scenarioID: "20"
  Description: "Nested any and all with complex conditions"
  Condition:
    match:
      any:
        of:
          - all:
              of:
                - expr: "user.role === 'guest'"
                - expr: "system.uptime < 100"
          - none:
              of:
                - expr: "context.weekDay === 'Friday'"
                - expr: "resource.accessLevel === 'confidential'"
  Expected: false
  Explanation: "The scenario fails because it's Friday and the resource access level is confidential."

- scenarioID: "21"
  Description: "All conditions with complex nested arithmetic"
  Condition:
    match:
      all:
        of:
          - expr: "(user.age - 10) > 15"
          - expr: "(resource.size + 100) < 700"
          - expr: "system.uptime > 200"
  Expected: true
  Explanation: "The scenario passes because the user's age minus 10 is over 15, the resource size plus 100 is under 700, and the system uptime is over 200."

- scenarioID: "22"
  Description: "Any conditions with complex logical grouping"
  Condition:
    match:
      any:
        of:
          - expr: "context.event === 'backup'"
          - expr: "resource.type === 'image' && context.timeOfDay === 'night'"
  Expected: true
  Explanation: "The scenario passes because the resource type is an image, and it’s nighttime."

- scenarioID: "23"
  Description: "Complex logical and arithmetic grouping with all"
  Condition:
    match:
      all:
        of:
          - expr: "(user.experienceYears * 2) > 8"
          - expr: "resource.owner === 'admin'"
          - none:
              of:
                - expr: "system.loadAverage > 3"
                - expr: "context.isHoliday"
  Expected: false
  Explanation: "The scenario fails because it is a holiday."

- scenarioID: "24"
  Description: "Nested none with multiple arithmetic checks"
  Condition:
    match:
      none:
        of:
          - expr: "(resource.size / 10) > 60"
          - expr: "(user.age + user.experienceYears) > 35"
          - expr: "(context.currentHour - 20) > 2"
  Expected: false
  Explanation: "The scenario passes because none of these conditions are true."

- scenarioID: "25"
  Description: "All conditions with complex arithmetic and logical operations"
  Condition:
    match:
      all:
        of:
          - expr: "(user.age * 2) + 5 > 60"
          - expr: "resource.tags.includes('internal')"
          - expr: "system.uptime > 300 || context.weekDay === 'Friday'"
  Expected: true
  Explanation: "The scenario passes because the arithmetic condition holds, the resource is tagged 'internal', and the uptime is over 300."

- scenarioID: "26"
  Description: "Check if the user is an admin"
  Condition:
    match:
      expr: "isAdmin()"
  Expected: true
  Explanation: "The user is an admin, so the function should return true."

- scenarioID: "27"
  Description: "Check if the user is blacklisted"
  Condition:
    match:
      expr: "isBlacklisted()"
  Expected: false
  Explanation: "The user is not blacklisted, so the function should return false."

- scenarioID: "28"
  Description: "Check if the resource contains a specific tag"
  Condition:
    match:
      expr: "hasTag(resource.tags, 'internal')"
  Expected: true
  Explanation: "The resource contains the 'internal' tag, so the function should return true."

- scenarioID: "29"
  Description: "Add two numbers"
  Condition:
    match:
      expr: "add(10, 5) === 15"
  Expected: true
  Explanation: "The function adds 10 and 5, resulting in 15."

- scenarioID: "30"
  Description: "Multiply two numbers"
  Condition:
    match:
      expr: "multiply(10, 5) === 50"
  Expected: true
  Explanation: "The function multiplies 10 and 5, resulting in 50."

- scenarioID: "31"
  Description: "Check if the user's age is greater than a threshold"
  Condition:
    match:
      expr: "isOlderThan(25)"
  Expected: true
  Explanation: "The user's age is 28, which is greater than 25, so the function should return true."

- scenarioID: "32"
  Description: "Check if a string contains a substring"
  Condition:
    match:
      expr: "contains('Hello, World!', 'World')"
  Expected: true
  Explanation: "The string contains 'World', so the function should return true."

- scenarioID: "33"
  Description: "Check the length of a string"
  Condition:
    match:
      expr: "length('Hello, World!') === 13"
  Expected: true
  Explanation: "The length of the string 'Hello, World!' is 13."

- scenarioID: "34"
  Description: "Check if a list contains a specific value"
  Condition:
    match:
      expr: "isIn('admin', ['admin', 'user', 'guest'])"
  Expected: true
  Explanation: "The list contains 'admin', so the function should return true."

- scenarioID: "35"
  Description: "Check if all required tags are present"
  Condition:
    match:
      expr: "all(resource.tags, ['internal', 'projectA'])"
  Expected: true
  Explanation: "The resource contains both 'internal' and 'projectA' tags, so the function should return true."

- scenarioID: 36
  Description: "Check if the user is an admin"
  Condition:
    match:
      expr: "isAdmin()"
  Expected: true
  Explanation: "The user is an admin, so the function should return true."

- scenarioID: 37
  Description: "Check if the user's age is greater than 25"
  Condition:
    match:
      expr: "isOlderThan(25)"
  Expected: true
  Explanation: "The user's age is 28, which is greater than 25."

- scenarioID: 38
  Description: "Check if the resource is tagged with 'internal'"
  Condition:
    match:
      expr: "hasTag(resource.tags, 'internal')"
  Expected: true
  Explanation: "The resource contains the 'internal' tag."

- scenarioID: 39
  Description: "Check if the resource size is more than 500 or the owner is admin"
  Condition:
    match:
      expr: "(resource.size > 500 || resource.owner === 'admin')"
  Expected: true
  Explanation: "The resource owner is admin."

- scenarioID: 40
  Description: "Check if the user has completed security training"
  Condition:
    match:
      expr: "isIn('security', user.completedTrainings)"
  Expected: true
  Explanation: "The user has completed security training."

- scenarioID: 41
  Description: "Check if the resource is encrypted and classified as high"
  Condition:
    match:
      expr: "resource.isEncrypted && resource.classificationLevel === 'high'"
  Expected: true
  Explanation: "The resource is encrypted and classified as high."

- scenarioID: 42
  Description: "Check if the user's last login was more than 30 days ago"
  Condition:
    match:
      expr: "daysSince(user.lastLogin) > 30"
  Expected: true
  Explanation: "The user's last login was on 2023-08-01, more than 30 days ago."

- scenarioID: 43
  Description: "Check if the resource's retention period is within 365 days"
  Condition:
    match:
      expr: "resource.retentionPeriodDays === 365"
  Expected: true
  Explanation: "The resource's retention period is exactly 365 days."

- scenarioID: 44
  Description: "Check if the user is active and has top-secret clearance"
  Condition:
    match:
      expr: "user.isActive && user.securityClearance === 'top-secret'"
  Expected: true
  Explanation: "The user is active and has top-secret clearance."

- scenarioID: 45
  Description: "Check if the resource was last accessed within the last 7 days"
  Condition:
    match:
      expr: "daysSince(resource.lastAccessed) <= 7"
  Expected: false
  Explanation: "The resource was last accessed within the last 7 days."

- scenarioID: 46
  Description: "Check if the user has at least 2 certifications"
  Condition:
    match:
      expr: "size(user.certifications) >= 2"
  Expected: false
  Explanation: "The user has only one certification."

- scenarioID: 47
  Description: "Check if the resource is in the us-west-2 region"
  Condition:
    match:
      expr: "resource.region === 'us-west-2'"
  Expected: true
  Explanation: "The resource is located in the us-west-2 region."

- scenarioID: 48
  Description: "Check if the user has Multi-Factor Authentication (MFA) enabled"
  Condition:
    match:
      expr: "user.hasMFA"
  Expected: true
  Explanation: "The user has MFA enabled."

- scenarioID: 49
  Description: "Check if the resource's replication status is completed"
  Condition:
    match:
      expr: "resource.replicationStatus === 'completed'"
  Expected: true
  Explanation: "The resource's replication status is completed."

- scenarioID: 50
  Description: "Check if the resource is backed up and classified as high"
  Condition:
    match:
      expr: "resource.isBackedUp && resource.classificationLevel === 'high'"
  Expected: true
  Explanation: "The resource is backed up and classified as high."

- scenarioID: 51
  Description: "Check if the user's last password change was less than 90 days ago"
  Condition:
    match:
      expr: "daysSince(user.lastPasswordChange) <= 90"
  Expected: true
  Explanation: "The user's last password change was within the last 90 days."

- scenarioID: 52
  Description: "Check if the resource's tags contain both 'internal' and 'projectA'"
  Condition:
    match:
      expr: "all(resource.tags, ['internal', 'projectA'])"
  Expected: true
  Explanation: "The resource contains both 'internal' and 'projectA' tags."

- scenarioID: 53
  Description: "Check if the user is located remotely and has write permissions"
  Condition:
    match:
      expr: "user.location === 'remote' && isIn('write', user.permissions)"
  Expected: true
  Explanation: "The user is located remotely and has write permissions."

- scenarioID: 54
  Description: "Check if the resource is shared with user789"
  Condition:
    match:
      expr: "isIn('user789', resource.sharedWith)"
  Expected: true
  Explanation: "The resource is shared with user789."

- scenarioID: 55
  Description: "Check if the user is not blacklisted"
  Condition:
    match:
      expr: "!isBlacklisted()"
  Expected: true
  Explanation: "The user is not blacklisted."

- scenarioID: 56
  Description: "Check if the resource's originating service is dataLake"
  Condition:
    match:
      expr: "resource.originatingService === 'dataLake'"
  Expected: true
  Explanation: "The resource's originating service is dataLake."

- scenarioID: 57
  Description: "Check if the system load average is below 2"
  Condition:
    match:
      expr: "system.loadAverage < 2"
  Expected: true
  Explanation: "The system load average is 1.2, which is below 2."

- scenarioID: 58
  Description: "Check if the user's preferred language is English"
  Condition:
    match:
      expr: "user.preferredLanguage === 'en-US'"
  Expected: true
  Explanation: "The user's preferred language is set to English (en-US)."

- scenarioID: 59
  Description: "Check if the resource was last modified by user456"
  Condition:
    match:
      expr: "resource.lastModifiedBy === 'user456'"
  Expected: true
  Explanation: "The resource was last modified by user456."

- scenarioID: 60
  Description: "Check if the user's department is IT and has top-secret clearance"
  Condition:
    match:
      expr: "user.department === 'IT' && user.securityClearance === 'top-secret'"
  Expected: true
  Explanation: "The user is in the IT department and has top-secret clearance."

- scenarioID: 61
  Description: "Check if the resource is not shared with user101"
  Condition:
    match:
      expr: "!isIn('user101', resource.sharedWith)"
  Expected: false
  Explanation: "The resource is shared with user101."

- scenarioID: 62
  Description: "Check if the user has both read and write permissions"
  Condition:
    match:
      expr: "all(user.permissions, ['read', 'write'])"
  Expected: true
  Explanation: "The user has both read and write permissions."

- scenarioID: 63
  Description: "Check if the resource is classified as top-secret and encrypted"
  Condition:
    match:
      expr: "resource.classificationLevel === 'top-secret' && resource.isEncrypted"
  Expected: false
  Explanation: "The resource is not classified as top-secret."

- scenarioID: 64
  Description: "Check if the user's last login was within the last 60 days"
  Condition:
    match:
      expr: "daysSince(user.lastLogin) <= 60"
  Expected: true
  Explanation: "The user's last login was more than 60 days ago."

- scenarioID: 65
  Description: "Check if the resource has a retention period of exactly one year"
  Condition:
    match:
      expr: "resource.retentionPeriodDays === 365"
  Expected: true
  Explanation: "The resource has a retention period of exactly one year."

- scenarioID: 66
  Description: "Check if the user's manager is user456"
  Condition:
    match:
      expr: "user.manager === 'user456'"
  Expected: true
  Explanation: "The user's manager is user456."

- scenarioID: 67
  Description: "Check if the resource is not classified as public"
  Condition:
    match:
      expr: "resource.accessLevel !== 'public'"
  Expected: true
  Explanation: "The resource's access level is not public."

- scenarioID: 68
  Description: "Check if the user has completed compliance training"
  Condition:
    match:
      expr: "isIn('compliance', user.completedTrainings)"
  Expected: true
  Explanation: "The user has completed compliance training."

- scenarioID: 69
  Description: "Check if the resource's region is not us-east-1"
  Condition:
    match:
      expr: "resource.region !== 'us-east-1'"
  Expected: true
  Explanation: "The resource is located in us-west-2, not us-east-1."

- scenarioID: 70
  Description: "Check if the system has been up for more than 200 hours"
  Condition:
    match:
      expr: "system.uptime > 200"
  Expected: true
  Explanation: "The system uptime is 250 hours."

- scenarioID: 71
  Description: "Check if the user's security clearance is not low"
  Condition:
    match:
      expr: "user.securityClearance !== 'low'"
  Expected: true
  Explanation: "The user's security clearance is top-secret."

- scenarioID: 72
  Description: "Check if the resource is tagged with projectA and is classified"
  Condition:
    match:
      expr: "hasTag(resource.tags, 'projectA') && resource.classificationLevel === 'classified'"
  Expected: true
  Explanation: "The resource is tagged with projectA and is classified."

- scenarioID: 73
  Description: "Check if the user is located remotely and active"
  Condition:
    match:
      expr: "user.location === 'remote' && user.isActive"
  Expected: true
  Explanation: "The user is located remotely and is active."

- scenarioID: 74
  Description: "Check if the resource's replication status is not in progress"
  Condition:
    match:
      expr: "resource.replicationStatus !== 'in-progress'"
  Expected: true
  Explanation: "The resource's replication status is completed."

- scenarioID: 75
  Description: "Check if the user has not changed the password in the last 30 days"
  Condition:
    match:
      expr: "daysSince(user.lastPasswordChange) > 30"
  Expected: false
  Explanation: "The user's last password change was less than 30 days ago."

- scenarioID: 76
  Description: "Check if the resource is in the classified category and backed up"
  Condition:
    match:
      expr: "resource.category === 'classified' && resource.isBackedUp"
  Expected: true
  Explanation: "The resource is classified and backed up."

- scenarioID: 77
  Description: "Check if the user's role includes both admin and manager"
  Condition:
    match:
      expr: "all(user.roles, ['admin', 'manager'])"
  Expected: false
  Explanation: "The user is an admin but not a manager."

- scenarioID: 78
  Description: "Check if the resource is encrypted and shared with user789"
  Condition:
    match:
      expr: "resource.isEncrypted && isIn('user789', resource.sharedWith)"
  Expected: true
  Explanation: "The resource is encrypted and shared with user789."

- scenarioID: 79
  Description: "Check if the user's department is IT or security"
  Condition:
    match:
      expr: "user.department === 'IT' || user.department === 'security'"
  Expected: true
  Explanation: "The user's department is IT."

- scenarioID: 80
  Description: "Check if the resource is not encrypted"
  Condition:
    match:
      expr: "!resource.isEncrypted"
  Expected: false
  Explanation: "The resource is encrypted."

- scenarioID: 81
  Description: "Check if the user's preferred language is not French"
  Condition:
    match:
      expr: "user.preferredLanguage !== 'fr-FR'"
  Expected: true
  Explanation: "The user's preferred language is not French."

- scenarioID: 82
  Description: "Check if the resource was last accessed by user123"
  Condition:
    match:
      expr: "resource.createdBy === 'user123'"
  Expected: true
  Explanation: "The resource was created by user123."

- scenarioID: 83
  Description: "Check if the user's roles include only admin"
  Condition:
    match:
      expr: "size(user.roles) === 1 && isIn('admin', user.roles)"
  Expected: true
  Explanation: "The user has only one role, which is admin."

- scenarioID: 84
  Description: "Check if the resource's classification level is not medium"
  Condition:
    match:
      expr: "resource.classificationLevel !== 'medium'"
  Expected: true
  Explanation: "The resource's classification level is high."

- scenarioID: 85
  Description: "Check if the user's manager is not user789"
  Condition:
    match:
      expr: "user.manager !== 'user789'"
  Expected: true
  Explanation: "The user's manager is user456, not user789."

- scenarioID: "86"
  Description: "Admin user accessing a confidential image with a backup and low system load"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.accessLevel === 'confidential'"
          - expr: "resource.isBackedUp"
          - expr: "system.loadAverage < 2"
          - none:
              of:
                - expr: "context.isHoliday"
                - expr: "resource.classificationLevel === 'low'"
  Expected: true
  Explanation: "The user is an admin, the resource is confidential, backed up, the system load is low, and it's not a holiday."

- scenarioID: "87"
  Description: "Complex nested conditions with multiple custom functions"
  Condition:
    match:
      all:
        of:
          - expr: "isOlderThan(25)"
          - expr: "multiply(user.experienceYears, 2) > 8"
          - expr: "isIn('classified', resource.category)"
          - any:
              of:
                - expr: "daysSince(user.lastLogin) <= 90"
                - expr: "isSubset(['read', 'write'], user.permissions)"
  Expected: true
  Explanation: "The user is older than 25, has sufficient experience, and the resource is classified. Additionally, the user has logged in within the last 90 days or has the required permissions."

- scenarioID: "88"
  Description: "Check for user activity and resource encryption with complex nested logic"
  Condition:
    match:
      all:
        of:
          - expr: "user.isActive"
          - expr: "resource.isEncrypted"
          - none:
              of:
                - expr: "daysSince(resource.lastAccessed) > 30"
                - expr: "user.securityClearance !== 'top-secret'"
          - any:
              of:
                - expr: "system.maintenanceMode"
                - expr: "context.event === 'maintenance'"
  Expected: true
  Explanation: "The user is active, the resource is encrypted, the last access was within 30 days, and either the system is in maintenance mode or there's a maintenance event."

- scenarioID: "89"
  Description: "Check for admin user with specific permissions on a highly classified resource"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.classificationLevel === 'high'"
          - expr: "isIn('write', user.permissions)"
          - none:
              of:
                - expr: "user.securityClearance !== 'top-secret'"
                - expr: "resource.region !== 'us-west-2'"
  Expected: true
  Explanation: "The user is an admin with write permissions on a highly classified resource, has top-secret clearance, and the resource is in the correct region."

- scenarioID: "90"
  Description: "User with sufficient experience accessing a non-classified resource during the night"
  Condition:
    match:
      all:
        of:
          - expr: "user.experienceYears >= 5"
          - expr: "resource.classificationLevel !== 'classified'"
          - expr: "context.timeOfDay === 'night'"
          - none:
              of:
                - expr: "user.location === 'onsite'"
                - expr: "resource.isEncrypted === false"
  Expected: true
  Explanation: "The user has sufficient experience, is accessing a non-classified resource during the night, is not onsite, and the resource is encrypted."

- scenarioID: "91"
  Description: "User's last login and password change are recent, with completed security training"
  Condition:
    match:
      all:
        of:
          - expr: "daysSince(user.lastLogin) <= 180"
          - expr: "daysSince(user.lastPasswordChange) <= 90"
          - expr: "isIn('security', user.completedTrainings)"
          - none:
              of:
                - expr: "user.isActive === false"
                - expr: "user.hasMFA === false"
  Expected: true
  Explanation: "The user has logged in within the last 180 days, changed their password recently, completed security training, and is active with MFA enabled."

- scenarioID: "92"
  Description: "Resource shared with specific users and not backed up"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('user789', resource.sharedWith)"
          - expr: "resource.isBackedUp === false"
          - none:
              of:
                - expr: "resource.category === 'classified'"
                - expr: "resource.replicationStatus !== 'completed'"
  Expected: true
  Explanation: "The resource is shared with a specific user, not backed up, not classified, and its replication is completed."

- scenarioID: "93"
  Description: "Complex evaluation of system uptime and maintenance with user and resource attributes"
  Condition:
    match:
      all:
        of:
          - expr: "system.uptime > 200"
          - expr: "context.weekDay === 'Friday'"
          - expr: "resource.lastModifiedBy === 'user456'"
          - none:
              of:
                - expr: "user.department !== 'IT'"
                - expr: "context.event !== 'maintenance'"
  Expected: true
  Explanation: "The system has been up for over 200 hours, it's Friday, the resource was last modified by a specific user, the user is in IT, and there's a maintenance event."

- scenarioID: "94"
  Description: "Multiple roles, resource encryption, and time-based conditions"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('admin', user.roles)"
          - expr: "resource.isEncrypted"
          - expr: "daysSince(resource.lastAccessed) <= 30"
          - none:
              of:
                - expr: "user.securityClearance !== 'top-secret'"
                - expr: "system.maintenanceMode === false"
  Expected: true
  Explanation: "The user is an admin, the resource is encrypted, it was accessed within the last 30 days, and the user has top-secret clearance with system maintenance mode on."

- scenarioID: "95"
  Description: "Evaluation of user certification, resource classification, and recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.classificationLevel === 'high'"
          - expr: "system.uptime <= 300"
          - any:
              of:
                - expr: "daysSince(user.createdAt) > 365"
                - expr: "resource.isBackedUp"
  Expected: true
  Explanation: "The user is certified, the resource is highly classified, the system uptime is under 300 hours, and either the user was created over a year ago or the resource is backed up."

- scenarioID: "96"
  Description: "User with high clearance and resource encryption on a weekend"
  Condition:
    match:
      all:
        of:
          - expr: "user.securityClearance === 'top-secret'"
          - expr: "resource.isEncrypted"
          - expr: "context.weekDay === 'Saturday'"
          - none:
              of:
                - expr: "resource.isBackedUp === false"
                - expr: "user.hasMFA === false"
  Expected: true
  Explanation: "The user has top-secret clearance, the resource is encrypted, it’s Saturday, and the resource is backed up with MFA enabled."

- scenarioID: "97"
  Description: "Evaluation of user certifications and completed trainings with recent resource access"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "isIn('security', user.completedTrainings)"
          - expr: "daysSince(resource.lastAccessed) <= 10"
          - none:
              of:
                - expr: "resource.classificationLevel !== 'high'"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is certified and has completed security training, the resource was accessed within the last 10 days, it is highly classified, and the user is active."

- scenarioID: "98"
  Description: "Admin user accessing a highly classified, shared resource with MFA enabled"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.classificationLevel === 'high'"
          - expr: "isIn('user789', resource.sharedWith)"
          - expr: "user.hasMFA"
          - none:
              of:
                - expr: "context.isHoliday"
                - expr: "system.uptime < 100"
  Expected: true
  Explanation: "The user is an admin, the resource is highly classified and shared with a specific user, the user has MFA enabled, and it’s not a holiday with system uptime above 100."

- scenarioID: "99"
  Description: "User accessing a remote confidential resource with a recent password change"
  Condition:
    match:
      all:
        of:
          - expr: "user.location === 'remote'"
          - expr: "resource.accessLevel === 'confidential'"
          - expr: "daysSince(user.lastPasswordChange) <= 30"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "context.timeOfDay === 'day'"
  Expected: true
  Explanation: "The user is remote, the resource is confidential, the user’s password was changed recently, and the resource is encrypted with access occurring at night."

- scenarioID: "100"
  Description: "Evaluation of resource backup and user department with system load conditions"
  Condition:
    match:
      all:
        of:
          - expr: "resource.isBackedUp"
          - expr: "user.department === 'IT'"
          - expr: "system.loadAverage < 2"
          - none:
              of:
                - expr: "user.roles.includes('guest')"
                - expr: "resource.category === 'public'"
  Expected: true
  Explanation: "The resource is backed up, the user is in IT, the system load is low, and the user is not a guest with the resource not being public."

- scenarioID: "101"
  Description: "Admin user evaluating recent system uptime and encrypted resource status"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "system.uptime > 200"
          - expr: "resource.isEncrypted"
          - none:
              of:
                - expr: "user.location === 'onsite'"
                - expr: "resource.isBackedUp === false"
  Expected: true
  Explanation: "The user is an admin, the system uptime is over 200 hours, the resource is encrypted, the user is not onsite, and the resource is backed up."

- scenarioID: "102"
  Description: "Complex evaluation with system maintenance, resource tags, and user certifications"
  Condition:
    match:
      all:
        of:
          - expr: "context.event === 'maintenance'"
          - expr: "isIn('internal', resource.tags)"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - none:
              of:
                - expr: "user.roles.includes('guest')"
                - expr: "resource.isEncrypted === false"
  Expected: true
  Explanation: "There’s a maintenance event, the resource is tagged internal, the user is certified, and the user is not a guest with the resource being encrypted."

- scenarioID: "103"
  Description: "Check for admin user accessing a classified resource during maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.classificationLevel === 'classified'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isBackedUp === false"
                - expr: "user.hasMFA === false"
  Expected: true
  Explanation: "The user is an admin, the resource is classified, there’s a maintenance event, and the resource is backed up with the user having MFA enabled."

- scenarioID: "104"
  Description: "User with specific training accessing an encrypted resource"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('security', user.completedTrainings)"
          - expr: "resource.isEncrypted"
          - expr: "resource.lastModifiedBy === 'user456'"
          - none:
              of:
                - expr: "resource.classificationLevel === 'low'"
                - expr: "context.timeOfDay === 'day'"
  Expected: true
  Explanation: "The user has completed security training, the resource is encrypted, it was last modified by a specific user, it’s not low classified, and the access occurs at night."

- scenarioID: "105"
  Description: "Complex evaluation with user certification, system uptime, and resource tags"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "system.uptime > 200"
          - expr: "isIn('projectA', resource.tags)"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "context.weekDay !== 'Friday'"
  Expected: true
  Explanation: "The user is certified, the system uptime is over 200 hours, the resource is tagged projectA, it’s encrypted, and the day is Friday."

- scenarioID: "106"
  Description: "Evaluation of resource replication status and user security clearance"
  Condition:
    match:
      all:
        of:
          - expr: "resource.replicationStatus === 'completed'"
          - expr: "user.securityClearance === 'top-secret'"
          - expr: "daysSince(user.lastPasswordChange) <= 60"
          - none:
              of:
                - expr: "user.isActive === false"
                - expr: "resource.category === 'public'"
  Expected: true
  Explanation: "The resource replication is completed, the user has top-secret clearance, the password was changed recently, the user is active, and the resource is not public."

- scenarioID: "107"
  Description: "User with specific training accessing a resource in a specific region"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('compliance', user.completedTrainings)"
          - expr: "resource.region === 'us-west-2'"
          - expr: "resource.isEncrypted"
          - none:
              of:
                - expr: "resource.classificationLevel !== 'classified'"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user has completed compliance training, the resource is in the correct region, it’s encrypted, classified, and the user is not a guest."

- scenarioID: "108"
  Description: "Admin user accessing a high-security resource with recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.securityClearance === 'high'"
          - expr: "daysSince(resource.lastAccessed) <= 15"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "system.maintenanceMode === false"
  Expected: true
  Explanation: "The user is an admin, the resource has high security clearance, it was accessed recently, it’s encrypted, and system maintenance mode is on."

- scenarioID: "109"
  Description: "Evaluation of user’s department and recent resource modification with system load"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "resource.lastModifiedBy === 'user456'"
          - expr: "system.loadAverage < 1.5"
          - none:
              of:
                - expr: "resource.category === 'public'"
                - expr: "user.securityClearance !== 'top-secret'"
  Expected: true
  Explanation: "The user is in the IT department, the resource was recently modified by a specific user, the system load is low, and the resource is not public with the user having top-secret clearance."

- scenarioID: "110"
  Description: "User accessing a classified resource with specific certifications and encryption"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.classificationLevel === 'classified'"
          - expr: "resource.isEncrypted"
          - none:
              of:
                - expr: "user.roles.includes('guest')"
                - expr: "resource.isBackedUp === false"
  Expected: true
  Explanation: "The user is certified, the resource is classified and encrypted, the user is not a guest, and the resource is backed up."

- scenarioID: "111"
  Description: "User with specific training accessing a backed-up resource during maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('security', user.completedTrainings)"
          - expr: "resource.isBackedUp"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.classificationLevel === 'low'"
                - expr: "user.hasMFA === false"
  Expected: true
  Explanation: "The user has completed security training, the resource is backed up, there’s a maintenance event, and it’s not low classified with the user having MFA enabled."

- scenarioID: "112"
  Description: "Complex conditions involving user activity, resource classification, and system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "user.isActive"
          - expr: "resource.classificationLevel !== 'public'"
          - expr: "system.uptime > 100"
          - none:
              of:
                - expr: "user.location === 'onsite'"
                - expr: "resource.isEncrypted === false"
  Expected: true
  Explanation: "The user is active, the resource is not public, the system uptime is over 100 hours, the user is not onsite, and the resource is encrypted."

- scenarioID: "113"
  Description: "User with specific certifications accessing a high-security resource with low system load"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.securityClearance === 'high'"
          - expr: "system.loadAverage < 2"
          - none:
              of:
                - expr: "resource.isBackedUp === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is certified, the resource has high security clearance, the system load is low, the resource is backed up, and the user is active."

- scenarioID: "114"
  Description: "Evaluation of user security clearance and resource category with recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "user.securityClearance === 'top-secret'"
          - expr: "resource.category === 'classified'"
          - expr: "daysSince(resource.lastAccessed) <= 30"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "context.weekDay !== 'Friday'"
  Expected: true
  Explanation: "The user has top-secret clearance, the resource is classified, it was accessed recently, it’s encrypted, and the day is Friday."

- scenarioID: "115"
  Description: "User with specific training accessing a resource in a specific region with system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('compliance', user.completedTrainings)"
          - expr: "resource.region === 'us-west-2'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "system.maintenanceMode === false"
  Expected: true
  Explanation: "The user has completed compliance training, the resource is in the correct region, there’s a maintenance event, the resource is encrypted, and system maintenance mode is on."

- scenarioID: "116"
  Description: "Admin user with recent resource modification accessing during a maintenance event"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.lastModifiedBy === 'user456'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "user.roles.includes('guest')"
                - expr: "resource.isEncrypted === false"
  Expected: true
  Explanation: "The user is an admin, the resource was recently modified by a specific user, there’s a maintenance event, and the resource is encrypted with the user not being a guest."

- scenarioID: "117"
  Description: "Evaluation of user’s department, resource category, and recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "resource.category === 'classified'"
          - expr: "system.uptime > 100"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "context.timeOfDay === 'day'"
  Expected: true
  Explanation: "The user is in the IT department, the resource is classified, the system uptime is over 100 hours, it’s encrypted, and the access is occurring at night."

- scenarioID: "118"
  Description: "User accessing a confidential resource with high security clearance during a maintenance event"
  Condition:
    match:
      all:
        of:
          - expr: "resource.accessLevel === 'confidential'"
          - expr: "user.securityClearance === 'high'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "user.roles.includes('guest')"
                - expr: "resource.isEncrypted === false"
  Expected: true
  Explanation: "The resource is confidential, the user has high security clearance, there’s a maintenance event, the user is not a guest, and the resource is encrypted."

- scenarioID: "119"
  Description: "Evaluation of user’s recent password change and resource encryption during maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "daysSince(user.lastPasswordChange) <= 90"
          - expr: "resource.isEncrypted"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "user.isActive === false"
                - expr: "resource.isBackedUp === false"
  Expected: true
  Explanation: "The user’s password was changed recently, the resource is encrypted, there’s a maintenance event, the user is active, and the resource is backed up."

- scenarioID: "120"
  Description: "User accessing a high-security resource with specific certifications and system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.securityClearance === 'high'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is certified, the resource has high security clearance, there’s a maintenance event, it’s encrypted, and the user is active."

- scenarioID: "121"
  Description: "User with specific department and high security clearance accessing a classified resource"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "user.securityClearance === 'top-secret'"
          - expr: "resource.classificationLevel === 'classified'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is in the IT department, has top-secret clearance, the resource is classified, it's encrypted, and the user is active."

- scenarioID: "122"
  Description: "Admin user accessing a confidential resource with recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.accessLevel === 'confidential'"
          - expr: "daysSince(resource.lastAccessed) <= 10"
          - none:
              of:
                - expr: "user.roles.includes('guest')"
                - expr: "resource.isBackedUp === false"
  Expected: true
  Explanation: "The user is an admin, the resource is confidential, it was accessed recently, the user is not a guest, and the resource is backed up."

- scenarioID: "123"
  Description: "User with specific role and training accessing a shared encrypted resource"
  Condition:
    match:
      all:
        of:
          - expr: "user.roles.includes('developer')"
          - expr: "isIn('compliance', user.completedTrainings)"
          - expr: "resource.isEncrypted"
          - expr: "isIn('user789', resource.sharedWith)"
          - none:
              of:
                - expr: "resource.classificationLevel === 'low'"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is a developer, has completed compliance training, the resource is encrypted and shared with a specific user, it is not low classified, and the user is active."

- scenarioID: "124"
  Description: "Evaluation of user’s certifications and resource replication status during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.replicationStatus === 'completed'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is certified, the resource replication is completed, there is a maintenance event, the resource is encrypted, and the user is not a guest."

- scenarioID: "125"
  Description: "User with MFA accessing a high-security resource during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "user.hasMFA"
          - expr: "resource.securityClearance === 'high'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user has MFA enabled, the resource has high security clearance, there is a maintenance event, the resource is encrypted, and the user is active."

- scenarioID: "126"
  Description: "Evaluation of recent system uptime and encrypted resource with user’s security clearance"
  Condition:
    match:
      all:
        of:
          - expr: "system.uptime > 150"
          - expr: "resource.isEncrypted"
          - expr: "user.securityClearance === 'top-secret'"
          - none:
              of:
                - expr: "user.isActive === false"
                - expr: "resource.isBackedUp === false"
  Expected: true
  Explanation: "The system uptime is over 150 hours, the resource is encrypted, the user has top-secret clearance, the resource is backed up, and the user is active."

- scenarioID: "127"
  Description: "Complex conditions with user’s department, resource tags, and recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "isIn('internal', resource.tags)"
          - expr: "system.uptime > 100"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is in the IT department, the resource is tagged as internal, the system uptime is over 100 hours, it’s encrypted, and the user is active."

- scenarioID: "128"
  Description: "User with top-secret clearance accessing a classified resource with recent password change"
  Condition:
    match:
      all:
        of:
          - expr: "user.securityClearance === 'top-secret'"
          - expr: "resource.classificationLevel === 'classified'"
          - expr: "daysSince(user.lastPasswordChange) <= 30"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user has top-secret clearance, the resource is classified, the user’s password was changed recently, the resource is encrypted, and the user is not a guest."

- scenarioID: "129"
  Description: "Evaluation of resource’s backup status and user’s recent activity during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "resource.isBackedUp"
          - expr: "user.isActive"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.classificationLevel !== 'high'"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The resource is backed up, the user is active, there’s a maintenance event, the resource is high classified, and the user is active."

- scenarioID: "130"
  Description: "Admin user accessing a confidential resource with sufficient experience and recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.accessLevel === 'confidential'"
          - expr: "user.experienceYears >= 5"
          - expr: "daysSince(resource.lastAccessed) <= 15"
          - none:
              of:
                - expr: "user.roles.includes('guest')"
                - expr: "resource.isEncrypted === false"
  Expected: true
  Explanation: "The user is an admin, the resource is confidential, the user has sufficient experience, the resource was accessed recently, the user is not a guest, and the resource is encrypted."

- scenarioID: "131"
  Description: "User with MFA accessing a resource in a specific region with high security clearance"
  Condition:
    match:
      all:
        of:
          - expr: "user.hasMFA"
          - expr: "resource.region === 'us-west-2'"
          - expr: "resource.securityClearance === 'high'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user has MFA enabled, the resource is in the correct region, it has high security clearance, the resource is encrypted, and the user is active."

- scenarioID: "132"
  Description: "Evaluation of user’s certifications, resource tags, and recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "isIn('projectA', resource.tags)"
          - expr: "system.uptime > 200"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is certified, the resource is tagged projectA, the system uptime is over 200 hours, it’s encrypted, and the user is active."

- scenarioID: "133"
  Description: "User with specific training accessing a shared, encrypted resource"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('security', user.completedTrainings)"
          - expr: "resource.isEncrypted"
          - expr: "isIn('user789', resource.sharedWith)"
          - none:
              of:
                - expr: "resource.classificationLevel !== 'classified'"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user has completed security training, the resource is encrypted, it’s shared with a specific user, it’s classified, and the user is not a guest."

- scenarioID: "134"
  Description: "Complex conditions involving user’s department, resource category, and recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "resource.category === 'classified'"
          - expr: "system.uptime > 150"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is in the IT department, the resource is classified, the system uptime is over 150 hours, it’s encrypted, and the user is active."

- scenarioID: "135"
  Description: "Evaluation of user’s security clearance, resource category, and recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "user.securityClearance === 'top-secret'"
          - expr: "resource.category === 'classified'"
          - expr: "daysSince(resource.lastAccessed) <= 20"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user has top-secret clearance, the resource is classified, it was accessed recently, it’s encrypted, and the user is active."

- scenarioID: "136"
  Description: "User with specific training accessing a resource with high security clearance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('compliance', user.completedTrainings)"
          - expr: "resource.securityClearance === 'high'"
          - expr: "resource.isEncrypted"
          - none:
              of:
                - expr: "resource.isBackedUp === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user has completed compliance training, the resource has high security clearance, it’s encrypted, the resource is backed up, and the user is active."

- scenarioID: "137"
  Description: "Admin user accessing a classified resource with recent password change"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.classificationLevel === 'classified'"
          - expr: "daysSince(user.lastPasswordChange) <= 30"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, the resource is classified, the user’s password was changed recently, the resource is encrypted, and the user is not a guest."

- scenarioID: "138"
  Description: "User with specific role accessing a high-security resource during maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "user.roles.includes('developer')"
          - expr: "resource.securityClearance === 'high'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is a developer, the resource has high security clearance, there’s a maintenance event, it’s encrypted, and the user is active."

- scenarioID: "139"
  Description: "Evaluation of user’s certifications, resource backup status, and recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.isBackedUp"
          - expr: "user.isActive"
          - none:
              of:
                - expr: "resource.classificationLevel !== 'high'"
                - expr: "system.uptime < 100"
  Expected: true
  Explanation: "The user is certified, the resource is backed up, the user is active, the resource is high classified, and the system uptime is over 100 hours."

- scenarioID: "140"
  Description: "User with specific department accessing a classified resource with recent password change"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "resource.classificationLevel === 'classified'"
          - expr: "daysSince(user.lastPasswordChange) <= 30"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is in the IT department, the resource is classified, the user’s password was changed recently, the resource is encrypted, and the user is not a guest."

- scenarioID: "141"
  Description: "Evaluation of user’s security clearance and resource category during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "user.securityClearance === 'top-secret'"
          - expr: "resource.category === 'classified'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user has top-secret clearance, the resource is classified, there’s a maintenance event, it’s encrypted, and the user is active."

- scenarioID: "142"
  Description: "Admin user accessing a resource with high security clearance and recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.securityClearance === 'high'"
          - expr: "daysSince(resource.lastAccessed) <= 20"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, the resource has high security clearance, it was accessed recently, the resource is encrypted, and the user is not a guest."

- scenarioID: "143"
  Description: "User with specific certifications accessing a high-security resource during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.securityClearance === 'high'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is certified, the resource has high security clearance, there’s a maintenance event, it’s encrypted, and the user is active."

- scenarioID: "144"
  Description: "Complex conditions involving user’s certifications, resource classification, and recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.classificationLevel === 'classified'"
          - expr: "system.uptime > 200"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is certified, the resource is classified, the system uptime is over 200 hours, it’s encrypted, and the user is active."

- scenarioID: "145"
  Description: "User accessing a resource with specific tags and high security clearance during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('projectA', resource.tags)"
          - expr: "resource.securityClearance === 'high'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The resource is tagged with projectA, it has high security clearance, there’s a maintenance event, it’s encrypted, and the user is active."

- scenarioID: "146"
  Description: "Evaluation of resource's region and user’s preferred language during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "resource.region === 'us-west-2'"
          - expr: "user.preferredLanguage === 'en-US'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The resource is in the correct region, the user's preferred language is English (US), there is a maintenance event, the resource is encrypted, and the user is active."

- scenarioID: "147"
  Description: "User accessing a shared resource with recent password change and high security clearance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('user789', resource.sharedWith)"
          - expr: "daysSince(user.lastPasswordChange) <= 30"
          - expr: "resource.securityClearance === 'high'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The resource is shared with a specific user, the user's password was changed recently, the resource has high security clearance, it is encrypted, and the user is not a guest."

- scenarioID: "148"
  Description: "Admin user accessing a high-security resource with recent activity and specific tags"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.securityClearance === 'high'"
          - expr: "isIn('internal', resource.tags)"
          - expr: "daysSince(resource.lastAccessed) <= 15"
          - none:
              of:
                - expr: "user.roles.includes('guest')"
                - expr: "resource.isEncrypted === false"
  Expected: true
  Explanation: "The user is an admin, the resource has high security clearance, it is tagged as internal, was accessed recently, and is encrypted. The user is not a guest."

- scenarioID: "149"
  Description: "Evaluation of user’s certifications and resource's replication status during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.replicationStatus === 'completed'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is certified, the resource's replication is completed, there is a maintenance event, the resource is encrypted, and the user is active."

- scenarioID: "150"
  Description: "User with MFA accessing a resource with specific region and recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "user.hasMFA"
          - expr: "resource.region === 'us-west-2'"
          - expr: "system.uptime > 100"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user has MFA enabled, the resource is in the correct region, the system uptime is over 100 hours, the resource is encrypted, and the user is active."

- scenarioID: "151"
  Description: "User with top-secret clearance accessing a shared resource during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "user.securityClearance === 'top-secret'"
          - expr: "isIn('user101', resource.sharedWith)"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user has top-secret clearance, the resource is shared with a specific user, there is a maintenance event, the resource is encrypted, and the user is active."

- scenarioID: "152"
  Description: "Evaluation of resource's backup status and user’s certifications with recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "resource.isBackedUp"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "user.isActive"
          - none:
              of:
                - expr: "resource.classificationLevel !== 'high'"
                - expr: "system.uptime < 200"
  Expected: true
  Explanation: "The resource is backed up, the user is certified, the user is active, the resource is high classified, and the system uptime is over 200 hours."

- scenarioID: "153"
  Description: "User accessing a high-security resource with specific training and recent password change"
  Condition:
    match:
      all:
        of:
          - expr: "resource.securityClearance === 'high'"
          - expr: "isIn('security', user.completedTrainings)"
          - expr: "daysSince(user.lastPasswordChange) <= 30"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The resource has high security clearance, the user has completed security training, the user's password was changed recently, the resource is encrypted, and the user is not a guest."

- scenarioID: "154"
  Description: "Evaluation of resource’s region and user’s department with recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "resource.region === 'us-west-2'"
          - expr: "user.department === 'IT'"
          - expr: "system.uptime > 150"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The resource is in the correct region, the user is in the IT department, the system uptime is over 150 hours, the resource is encrypted, and the user is active."

- scenarioID: "155"
  Description: "Admin user accessing a resource with high security clearance and recent system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.securityClearance === 'high'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, the resource has high security clearance, there is a maintenance event, the resource is encrypted, and the user is not a guest."

- scenarioID: "156"
  Description: "User with MFA accessing a shared resource with recent activity and high security clearance"
  Condition:
    match:
      all:
        of:
          - expr: "user.hasMFA"
          - expr: "isIn('user789', resource.sharedWith)"
          - expr: "resource.securityClearance === 'high'"
          - expr: "daysSince(resource.lastAccessed) <= 20"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user has MFA enabled, the resource is shared with a specific user, it has high security clearance, it was accessed recently, the resource is encrypted, and the user is active."

- scenarioID: "157"
  Description: "User accessing a resource with specific tags and recent password change during maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('internal', resource.tags)"
          - expr: "daysSince(user.lastPasswordChange) <= 30"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The resource is tagged as internal, the user's password was changed recently, there is a maintenance event, the resource is encrypted, and the user is not a guest."

- scenarioID: "158"
  Description: "Evaluation of user’s certifications and resource’s classification level during maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.classificationLevel === 'high'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is certified, the resource is high classified, there is a maintenance event, the resource is encrypted, and the user is active."

- scenarioID: "159"
  Description: "User with specific role accessing a resource in a specific region with recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "user.roles.includes('developer')"
          - expr: "resource.region === 'us-west-2'"
          - expr: "system.uptime > 150"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is a developer, the resource is in the correct region, the system uptime is over 150 hours, the resource is encrypted, and the user is active."

- scenarioID: "160"
  Description: "Admin user accessing a classified resource with recent activity and specific certifications"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.classificationLevel === 'classified'"
          - expr: "daysSince(resource.lastAccessed) <= 20"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - none:
              of:
                - expr: "user.roles.includes('guest')"
                - expr: "resource.isEncrypted === false"
  Expected: true
  Explanation: "The user is an admin, the resource is classified, it was accessed recently, the user is certified, the resource is encrypted, and the user is not a guest."

- scenarioID: "161"
  Description: "User accessing a resource with specific tags and recent password change during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('projectA', resource.tags)"
          - expr: "daysSince(user.lastPasswordChange) <= 30"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The resource is tagged with projectA, the user's password was changed recently, there is a maintenance event, the resource is encrypted, and the user is active."

- scenarioID: "162"
  Description: "Evaluation of user’s department and resource’s replication status during maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "resource.replicationStatus === 'completed'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is in the IT department, the resource's replication is completed, there is a maintenance event, the resource is encrypted, and the user is active."

- scenarioID: "163"
  Description: "User with specific certifications accessing a high-security resource with recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.securityClearance === 'high'"
          - expr: "daysSince(resource.lastAccessed) <= 15"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is certified, the resource has high security clearance, it was accessed recently, the resource is encrypted, and the user is not a guest."

- scenarioID: "164"
  Description: "Admin user accessing a resource with specific training and recent password change during maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "isIn('compliance', user.completedTrainings)"
          - expr: "daysSince(user.lastPasswordChange) <= 30"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, has completed compliance training, the user's password was changed recently, there is a maintenance event, the resource is encrypted, and the user is not a guest."

- scenarioID: "165"
  Description: "Evaluation of resource’s region and user’s security clearance with recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "resource.region === 'us-west-2'"
          - expr: "user.securityClearance === 'top-secret'"
          - expr: "system.uptime > 200"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The resource is in the correct region, the user has top-secret clearance, the system uptime is over 200 hours, the resource is encrypted, and the user is active."

- scenarioID: "166"
  Description: "User with MFA accessing a resource in a specific region with recent activity and high security clearance"
  Condition:
    match:
      all:
        of:
          - expr: "user.hasMFA"
          - expr: "resource.region === 'us-west-2'"
          - expr: "resource.securityClearance === 'high'"
          - expr: "daysSince(resource.lastAccessed) <= 15"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user has MFA enabled, the resource is in the correct region, it has high security clearance, it was accessed recently, the resource is encrypted, and the user is active."

- scenarioID: "167"
  Description: "Admin user accessing a resource with specific certifications and recent system uptime during maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "system.uptime > 150"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, the resource is encrypted, the user is certified, the system uptime is over 150 hours, there is a maintenance event, and the user is not a guest."

- scenarioID: "168"
  Description: "Evaluation of user’s completed training, resource’s category, and recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('security', user.completedTrainings)"
          - expr: "resource.category === 'classified'"
          - expr: "system.uptime > 150"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user has completed security training, the resource is classified, the system uptime is over 150 hours, the resource is encrypted, and the user is active."

- scenarioID: "169"
  Description: "User accessing a resource with specific department and recent password change during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "daysSince(user.lastPasswordChange) <= 30"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is in the IT department, the user's password was changed recently, there is a maintenance event, the resource is encrypted, and the user is not a guest."

- scenarioID: "170"
  Description: "Admin user accessing a resource with specific certifications and high security clearance"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.securityClearance === 'high'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, certified, the resource has high security clearance, the resource is encrypted, and the user is not a guest."

- scenarioID: "171"
  Description: "User with MFA accessing a shared resource with specific tags and recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "user.hasMFA"
          - expr: "isIn('internal', resource.tags)"
          - expr: "system.uptime > 200"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user has MFA enabled, the resource is tagged as internal, the system uptime is over 200 hours, the resource is encrypted, and the user is active."

- scenarioID: "172"
  Description: "Evaluation of user’s manager and resource’s originating service during maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "user.manager === 'user456'"
          - expr: "resource.originatingService === 'dataLake'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user's manager is correct, the resource originated from the data lake service, there is a maintenance event, the resource is encrypted, and the user is active."

- scenarioID: "173"
  Description: "Admin user accessing a resource with high classification level and recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "resource.classificationLevel === 'high'"
          - expr: "daysSince(resource.lastAccessed) <= 10"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, the resource has a high classification level, it was accessed recently, the resource is encrypted, and the user is not a guest."

- scenarioID: "174"
  Description: "User with specific certifications accessing a resource with specific tags and recent password change"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "isIn('projectA', resource.tags)"
          - expr: "daysSince(user.lastPasswordChange) <= 45"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is certified, the resource is tagged with projectA, the user's password was changed recently, the resource is encrypted, and the user is active."

- scenarioID: "175"
  Description: "Evaluation of user’s certifications and resource’s backup status with recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.isBackedUp"
          - expr: "daysSince(resource.lastAccessed) <= 10"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is certified, the resource is backed up, it was accessed recently, the resource is encrypted, and the user is active."

- scenarioID: "176"
  Description: "User with MFA accessing a resource in a specific region with recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "user.hasMFA"
          - expr: "resource.region === 'us-west-2'"
          - expr: "system.uptime > 250"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user has MFA enabled, the resource is in the correct region, the system uptime is over 250 hours, the resource is encrypted, and the user is active."

- scenarioID: "177"
  Description: "Admin user accessing a resource with specific certifications and recent system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, certified, there is a maintenance event, the resource is encrypted, and the user is not a guest."

- scenarioID: "178"
  Description: "Evaluation of user’s manager and resource’s security clearance with recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "user.manager === 'user456'"
          - expr: "resource.securityClearance === 'top-secret'"
          - expr: "daysSince(resource.lastAccessed) <= 15"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user's manager is correct, the resource has top-secret clearance, it was accessed recently, the resource is encrypted, and the user is active."

- scenarioID: "179"
  Description: "User with specific certifications accessing a resource in a specific region with recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.region === 'us-west-2'"
          - expr: "daysSince(resource.lastAccessed) <= 15"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is certified, the resource is in the correct region, it was accessed recently, the resource is encrypted, and the user is active."

- scenarioID: "180"
  Description: "Admin user accessing a resource with specific certifications and recent password change"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "daysSince(user.lastPasswordChange) <= 45"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, certified, the user's password was changed recently, the resource is encrypted, and the user is not a guest."

- scenarioID: "181"
  Description: "User accessing a resource with specific department and recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "system.uptime > 200"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is in the IT department, the system uptime is over 200 hours, the resource is encrypted, and the user is active."

- scenarioID: "182"
  Description: "Evaluation of resource’s originating service and user’s security clearance with recent system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "resource.originatingService === 'dataLake'"
          - expr: "user.securityClearance === 'top-secret'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The resource originated from the data lake service, the user has top-secret clearance, there is a maintenance event, the resource is encrypted, and the user is active."

- scenarioID: "183"
  Description: "Admin user accessing a resource with specific tags and high classification level"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "isIn('classified', resource.tags)"
          - expr: "resource.classificationLevel === 'high'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, the resource is tagged as classified, it has high classification, the resource is encrypted, and the user is not a guest."

- scenarioID: "184"
  Description: "User with MFA accessing a resource with specific tags and recent password change"
  Condition:
    match:
      all:
        of:
          - expr: "user.hasMFA"
          - expr: "isIn('internal', resource.tags)"
          - expr: "daysSince(user.lastPasswordChange) <= 45"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user has MFA enabled, the resource is tagged as internal, the user's password was changed recently, the resource is encrypted, and the user is active."

- scenarioID: "185"
  Description: "Admin user accessing a resource with specific certifications and recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "daysSince(resource.lastAccessed) <= 10"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, certified, the resource was accessed recently, the resource is encrypted, and the user is not a guest."

- scenarioID: "186"
  Description: "Evaluation of user’s manager and resource’s region with recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "user.manager === 'user456'"
          - expr: "resource.region === 'us-west-2'"
          - expr: "system.uptime > 250"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user's manager is correct, the resource is in the correct region, the system uptime is over 250 hours, the resource is encrypted, and the user is active."

- scenarioID: "187"
  Description: "Admin user accessing a resource with specific certifications and high security clearance"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.securityClearance === 'high'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, certified, the resource has high security clearance, the resource is encrypted, and the user is not a guest."

- scenarioID: "188"
  Description: "User accessing a resource with specific department and recent password change during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "daysSince(user.lastPasswordChange) <= 45"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is in the IT department, the user's password was changed recently, there is a maintenance event, the resource is encrypted, and the user is active."

- scenarioID: "189"
  Description: "Admin user accessing a resource with specific tags and recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "isIn('projectA', resource.tags)"
          - expr: "system.uptime > 200"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, the resource is tagged with projectA, the system uptime is over 200 hours, the resource is encrypted, and the user is not a guest."

- scenarioID: "190"
  Description: "User accessing a resource with specific tags and certifications with recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('internal', resource.tags)"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "daysSince(resource.lastAccessed) <= 15"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The resource is tagged as internal, the user is certified, the resource was accessed recently, the resource is encrypted, and the user is active."

- scenarioID: "191"
  Description: "Evaluation of user’s manager and resource’s backup status with recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "user.manager === 'user456'"
          - expr: "resource.isBackedUp"
          - expr: "system.uptime > 250"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user's manager is correct, the resource is backed up, the system uptime is over 250 hours, the resource is encrypted, and the user is active."

- scenarioID: "192"
  Description: "Admin user accessing a resource with specific certifications and recent activity during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "daysSince(resource.lastAccessed) <= 10"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, certified, the resource was accessed recently, there is a maintenance event, the resource is encrypted, and the user is not a guest."

- scenarioID: "193"
  Description: "User accessing a resource with specific department and high security clearance during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "resource.securityClearance === 'high'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user is in the IT department, the resource has high security clearance, there is a maintenance event, the resource is encrypted, and the user is active."

- scenarioID: "194"
  Description: "Admin user accessing a resource with specific certifications and replication status with recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.replicationStatus === 'completed'"
          - expr: "system.uptime > 250"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, certified, the resource replication is completed, the system uptime is over 250 hours, the resource is encrypted, and the user is not a guest."

- scenarioID: "195"
  Description: "User accessing a resource with specific tags and certifications with recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('internal', resource.tags)"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "system.uptime > 250"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The resource is tagged as internal, the user is certified, the system uptime is over 250 hours, the resource is encrypted, and the user is active."

- scenarioID: "196"
  Description: "Evaluation of user’s manager and resource’s classification level with recent system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "user.manager === 'user456'"
          - expr: "resource.classificationLevel === 'high'"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user's manager is correct, the resource has a high classification level, there is a maintenance event, the resource is encrypted, and the user is active."

- scenarioID: "197"
  Description: "Admin user accessing a resource with specific certifications and backup status with recent system uptime"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "resource.isBackedUp"
          - expr: "system.uptime > 250"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, certified, the resource is backed up, the system uptime is over 250 hours, the resource is encrypted, and the user is not a guest."

- scenarioID: "198"
  Description: "User with MFA accessing a resource with specific tags and high classification level with recent activity"
  Condition:
    match:
      all:
        of:
          - expr: "user.hasMFA"
          - expr: "isIn('projectA', resource.tags)"
          - expr: "resource.classificationLevel === 'high'"
          - expr: "daysSince(resource.lastAccessed) <= 10"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user has MFA enabled, the resource is tagged with projectA, it has a high classification level, it was accessed recently, the resource is encrypted, and the user is active."

- scenarioID: "199"
  Description: "Evaluation of user’s manager and resource’s region with recent activity during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "user.manager === 'user456'"
          - expr: "resource.region === 'us-west-2'"
          - expr: "daysSince(resource.lastAccessed) <= 15"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
  Expected: true
  Explanation: "The user's manager is correct, the resource is in the correct region, it was accessed recently, there is a maintenance event, the resource is encrypted, and the user is active."

- scenarioID: "200"
  Description: "Admin user accessing a resource with specific certifications and recent system uptime during system maintenance"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "system.uptime > 250"
          - expr: "context.event === 'maintenance'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.roles.includes('guest')"
  Expected: true
  Explanation: "The user is an admin, certified, the system uptime is over 250 hours, there is a maintenance event, the resource is encrypted, and the user is not a guest."

- scenarioID: "201"
  Description: "Complex nested logic with roles, permissions, and encryption status"
  Condition:
    match:
      all:
        of:
          - expr: "isAdmin()"
          - expr: "isSubset(['read', 'write'], user.permissions)"
          - none:
              of:
                - expr: "user.roles.includes('guest')"
                - expr: "resource.isEncrypted === false"
          - any:
              of:
                - all:
                    of:
                      - expr: "user.securityClearance === 'top-secret'"
                      - expr: "resource.classificationLevel === 'high'"
                - expr: "hasTag(resource.tags, 'internal')"
  Expected: true
  Explanation: "The user is an admin, has the correct permissions, is not a guest, the resource is encrypted, and either has top-secret clearance with high classification or is tagged as internal."

- scenarioID: "202"
  Description: "Nested evaluation of roles, department, and resource category"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "isIn('admin', user.roles)"
          - expr: "resource.category === 'classified'"
          - none:
              of:
                - expr: "resource.accessLevel === 'public'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "hasTag(resource.tags, 'projectA')"
                - expr: "resource.isBackedUp === true"
  Expected: true
  Explanation: "The user is in IT, has an admin role, the resource is classified, it is not public, the user is active, and either the resource is tagged with projectA or it is backed up."

- scenarioID: "203"
  Description: "Evaluation of user certifications, manager, and resource replication status"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "user.manager === 'user456'"
          - expr: "resource.replicationStatus === 'completed'"
          - none:
              of:
                - expr: "user.roles.includes('guest')"
                - expr: "resource.isEncrypted === false"
          - any:
              of:
                - expr: "isSubset(['security', 'compliance'], user.completedTrainings)"
                - expr: "resource.classificationLevel === 'high'"
  Expected: true
  Explanation: "The user is certified, has the correct manager, the resource replication is completed, the user is not a guest, the resource is encrypted, and either the user has completed necessary trainings or the resource has a high classification level."

- scenarioID: "204"
  Description: "Complex nested evaluation of department, permissions, and resource security"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "isSubset(['read', 'write'], user.permissions)"
          - none:
              of:
                - expr: "resource.accessLevel === 'public'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.securityClearance === 'top-secret'"
                - expr: "isIn('classified', resource.category)"
  Expected: true
  Explanation: "The user is in IT, has the correct permissions, the resource is not public, the user is active, and either the resource has a top-secret clearance or is classified."

- scenarioID: "205"
  Description: "Evaluation of user manager, roles, and resource encryption status with complex conditions"
  Condition:
    match:
      all:
        of:
          - expr: "user.manager === 'user456'"
          - expr: "isIn('admin', user.roles)"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.securityClearance === 'high'"
                - expr: "hasIntersection(user.roles, ['admin', 'manager'])"
  Expected: true
  Explanation: "The user's manager is correct, the user is an admin, the resource is encrypted, the user is active, and either the resource has a high security clearance or the user has an intersecting role of admin or manager."

- scenarioID: "206"
  Description: "Nested evaluation of user certifications, department, and resource security clearance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "user.department === 'IT'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.securityClearance === 'top-secret'"
                - expr: "isSubset(['security', 'compliance'], user.completedTrainings)"
  Expected: true
  Explanation: "The user is certified, in IT, the resource is encrypted, the user is active, and either the resource has top-secret clearance or the user has completed the required trainings."

- scenarioID: "207"
  Description: "Evaluation of user roles, manager, and resource replication status with complex nested conditions"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('admin', user.roles)"
          - expr: "user.manager === 'user456'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.replicationStatus === 'completed'"
                - expr: "resource.isBackedUp === true"
  Expected: true
  Explanation: "The user is an admin, has the correct manager, the resource is encrypted, the user is active, and either the replication is completed or the resource is backed up."

- scenarioID: "208"
  Description: "Complex nested evaluation of user department, roles, and resource security"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "isIn('admin', user.roles)"
          - none:
              of:
                - expr: "resource.accessLevel === 'public'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.securityClearance === 'top-secret'"
                - expr: "hasTag(resource.tags, 'internal')"
  Expected: true
  Explanation: "The user is in IT, has an admin role, the resource is not public, the user is active, and either the resource has top-secret clearance or is tagged as internal."

- scenarioID: "209"
  Description: "Evaluation of user certifications, manager, and resource category with complex conditions"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "user.manager === 'user456'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.category === 'classified'"
                - expr: "isSubset(['security', 'compliance'], user.completedTrainings)"
  Expected: true
  Explanation: "The user is certified, has the correct manager, the resource is encrypted, the user is active, and either the resource is classified or the user has completed the required trainings."

- scenarioID: "210"
  Description: "Nested evaluation of user roles, department, and resource security clearance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('admin', user.roles)"
          - expr: "user.department === 'IT'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.securityClearance === 'high'"
                - expr: "hasIntersection(user.roles, ['admin', 'manager'])"
  Expected: true
  Explanation: "The user is an admin, in IT, the resource is encrypted, the user is active, and either the resource has high security clearance or the user has an intersecting role of admin or manager."

- scenarioID: "211"
  Description: "Complex nested conditions with user permissions, department, and resource encryption"
  Condition:
    match:
      all:
        of:
          - expr: "isSubset(['read', 'write'], user.permissions)"
          - expr: "user.department === 'IT'"
          - none:
              of:
                - expr: "resource.accessLevel === 'public'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.isEncrypted === true"
                - expr: "hasTag(resource.tags, 'projectA')"
  Expected: true
  Explanation: "The user has the correct permissions, is in IT, the resource is not public, the user is active, and either the resource is encrypted or tagged with projectA."

- scenarioID: "212"
  Description: "Evaluation of user certifications, roles, and resource security clearance with nested conditions"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "isIn('admin', user.roles)"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.securityClearance === 'top-secret'"
                - expr: "isSubset(['security', 'compliance'], user.completedTrainings)"
  Expected: true
  Explanation: "The user is certified, an admin, the resource is encrypted, the user is active, and either the resource has top-secret clearance or the user has completed the required trainings."

- scenarioID: "213"
  Description: "Complex evaluation of user department, manager, and resource replication status"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "user.manager === 'user456'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.replicationStatus === 'completed'"
                - expr: "resource.isBackedUp === true"
  Expected: true
  Explanation: "The user is in IT, has the correct manager, the resource is encrypted, the user is active, and either the replication is completed or the resource is backed up."

- scenarioID: "214"
  Description: "Nested evaluation of user roles, department, and resource security classification"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('admin', user.roles)"
          - expr: "user.department === 'IT'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.classificationLevel === 'high'"
                - expr: "hasTag(resource.tags, 'internal')"
  Expected: true
  Explanation: "The user is an admin, in IT, the resource is encrypted, the user is active, and either the resource has a high classification or is tagged as internal."

- scenarioID: "215"
  Description: "Evaluation of user certifications, roles, and resource category with complex conditions"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "isIn('admin', user.roles)"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.category === 'classified'"
                - expr: "isSubset(['security', 'compliance'], user.completedTrainings)"
  Expected: true
  Explanation: "The user is certified, an admin, the resource is encrypted, the user is active, and either the resource is classified or the user has completed the required trainings."

- scenarioID: "216"
  Description: "Complex nested conditions with user permissions, department, and resource encryption"
  Condition:
    match:
      all:
        of:
          - expr: "isSubset(['read', 'write'], user.permissions)"
          - expr: "user.department === 'IT'"
          - none:
              of:
                - expr: "resource.accessLevel === 'public'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.isEncrypted === true"
                - expr: "hasTag(resource.tags, 'internal')"
  Expected: true
  Explanation: "The user has the correct permissions, is in IT, the resource is not public, the user is active, and either the resource is encrypted or tagged as internal."

- scenarioID: "217"
  Description: "Evaluation of user department, roles, and resource security clearance with nested conditions"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "isIn('admin', user.roles)"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.securityClearance === 'top-secret'"
                - expr: "hasIntersection(user.roles, ['admin', 'manager'])"
  Expected: true
  Explanation: "The user is in IT, has an admin role, the resource is encrypted, the user is active, and either the resource has top-secret clearance or the user has intersecting roles of admin or manager."

- scenarioID: "218"
  Description: "Nested evaluation of user certifications, manager, and resource security clearance"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "user.manager === 'user456'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.securityClearance === 'high'"
                - expr: "hasTag(resource.tags, 'classified')"
  Expected: true
  Explanation: "The user is certified, has the correct manager, the resource is encrypted, the user is active, and either the resource has a high security clearance or is tagged as classified."

- scenarioID: "219"
  Description: "Evaluation of user department, roles, and resource classification level with complex nested conditions"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "isIn('admin', user.roles)"
          - none:
              of:
                - expr: "resource.accessLevel === 'public'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.classificationLevel === 'high'"
                - expr: "hasTag(resource.tags, 'projectA')"
  Expected: true
  Explanation: "The user is in IT, has an admin role, the resource is not public, the user is active, and either the resource has a high classification or is tagged with projectA."

- scenarioID: "220"
  Description: "Complex evaluation of user permissions, department, and resource security clearance"
  Condition:
    match:
      all:
        of:
          - expr: "isSubset(['read', 'write'], user.permissions)"
          - expr: "user.department === 'IT'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.securityClearance === 'top-secret'"
                - expr: "hasIntersection(user.roles, ['admin', 'manager'])"
  Expected: true
  Explanation: "The user has the correct permissions, is in IT, the resource is encrypted, the user is active, and either the resource has top-secret clearance or the user has intersecting roles of admin or manager."

- scenarioID: "221"
  Description: "Evaluation of user roles, certifications, and resource replication status with complex nested conditions"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('admin', user.roles)"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.replicationStatus === 'completed'"
                - expr: "resource.isBackedUp === true"
  Expected: true
  Explanation: "The user is an admin, certified, the resource is encrypted, the user is active, and either the replication is completed or the resource is backed up."

- scenarioID: "222"
  Description: "Nested evaluation of user department, roles, and resource security classification"
  Condition:
    match:
      all:
        of:
          - expr: "user.department === 'IT'"
          - expr: "isIn('admin', user.roles)"
          - none:
              of:
                - expr: "resource.accessLevel === 'public'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.classificationLevel === 'high'"
                - expr: "hasIntersection(resource.tags, ['internal', 'projectA'])"
  Expected: true
  Explanation: "The user is in IT, has an admin role, the resource is not public, the user is active, and either the resource has a high classification or is tagged with internal or projectA."

- scenarioID: "223"
  Description: "Complex evaluation of user manager, certifications, and resource classification level"
  Condition:
    match:
      all:
        of:
          - expr: "user.manager === 'user456'"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.classificationLevel === 'high'"
                - expr: "hasIntersection(resource.tags, ['classified', 'confidential'])"
  Expected: true
  Explanation: "The user's manager is correct, the user is certified, the resource is encrypted, the user is active, and either the resource has a high classification or is tagged with classified or confidential."

- scenarioID: "224"
  Description: "Nested evaluation of user roles, department, and resource classification level with complex conditions"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('admin', user.roles)"
          - expr: "user.department === 'IT'"
          - none:
              of:
                - expr: "resource.accessLevel === 'public'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.classificationLevel === 'high'"
                - expr: "hasIntersection(resource.tags, ['internal', 'projectA'])"
  Expected: true
  Explanation: "The user is an admin, in IT, the resource is not public, the user is active, and either the resource has a high classification or is tagged with internal or projectA."

- scenarioID: "225"
  Description: "Complex evaluation of user certifications, manager, and resource security clearance with nested conditions"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "user.manager === 'user456'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.securityClearance === 'top-secret'"
                - expr: "hasIntersection(resource.tags, ['classified', 'confidential'])"
  Expected: true
  Explanation: "The user is certified, has the correct manager, the resource is encrypted, the user is active, and either the resource has top-secret clearance or is tagged with classified or confidential."

- scenarioID: "226"
  Description: "Complex nested conditions with security clearance, job title, and resource encryption"
  Condition:
    match:
      all:
        of:
          - expr: "user.securityClearance === 'top-secret'"
          - expr: "user.jobTitle === 'Senior Developer'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.complianceStatus === 'Compliant'"
                - expr: "resource.backupFrequency === 'Daily'"
  Expected: true
  Explanation: "The user has top-secret clearance, is a Senior Developer, the resource is encrypted, the user is active, and either the resource is compliant or backed up daily."

- scenarioID: "227"
  Description: "Evaluation of user roles, skills, and resource classification level"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('admin', user.roles)"
          - expr: "isIn('JavaScript', user.skills)"
          - none:
              of:
                - expr: "resource.classificationLevel === 'low'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.region === 'us-west-2'"
                - expr: "resource.storageTier === 'Standard'"
  Expected: true
  Explanation: "The user is an admin, skilled in JavaScript, the resource is not low classified, the user is active, and either the resource is in the correct region or storage tier."

- scenarioID: "228"
  Description: "Nested evaluation of user certifications, direct reports, and resource backup status"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "user.directReports.length > 1"
          - none:
              of:
                - expr: "resource.isBackedUp === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.replicationStatus === 'completed'"
                - expr: "resource.backupRetentionPeriodDays > 90"
  Expected: true
  Explanation: "The user is certified, has more than one direct report, the resource is backed up, the user is active, and either the replication is completed or the backup retention is over 90 days."

- scenarioID: "229"
  Description: "Evaluation of user location, preferred language, and resource file type"
  Condition:
    match:
      all:
        of:
          - expr: "user.location === 'remote'"
          - expr: "user.preferredLanguage === 'en-US'"
          - none:
              of:
                - expr: "resource.fileType === 'txt'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.filePermissions.includes('read')"
                - expr: "resource.owner === 'admin'"
  Expected: true
  Explanation: "The user is remote, prefers English, the resource is not a text file, the user is active, and either the resource has read permissions or is owned by admin."

- scenarioID: "230"
  Description: "Complex nested conditions with user vacation balance, work-from-home eligibility, and resource compliance"
  Condition:
    match:
      all:
        of:
          - expr: "user.vacationBalanceDays > 10"
          - expr: "user.workFromHomeEligibility === true"
          - none:
              of:
                - expr: "resource.complianceStatus === 'Non-Compliant'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.encryptionType === 'AES-256'"
                - expr: "resource.backupFrequency === 'Daily'"
  Expected: true
  Explanation: "The user has sufficient vacation balance, is eligible to work from home, the resource is compliant, the user is active, and either the resource uses AES-256 encryption or is backed up daily."

- scenarioID: "231"
  Description: "Evaluation of user performance rating, manager, and resource classification level"
  Condition:
    match:
      all:
        of:
          - expr: "user.performanceRating === 'Exceeds Expectations'"
          - expr: "user.manager === 'user456'"
          - none:
              of:
                - expr: "resource.classificationLevel === 'low'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.sharedWith.includes('user789')"
                - expr: "resource.retentionPeriodDays > 180"
  Expected: true
  Explanation: "The user has an excellent performance rating, the manager is correct, the resource is not low classified, the user is active, and either the resource is shared with user789 or has a long retention period."

- scenarioID: "232"
  Description: "Nested evaluation of user certifications, project assignments, and resource backup retention"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "isIn('ProjectX', user.projectAssignments)"
          - none:
              of:
                - expr: "resource.isBackedUp === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.backupRetentionPeriodDays > 365"
                - expr: "resource.replicationStatus === 'completed'"
  Expected: true
  Explanation: "The user is certified, assigned to ProjectX, the resource is backed up, the user is active, and either the backup retention is long or the replication is complete."

- scenarioID: "233"
  Description: "Evaluation of user security groups, job title, and resource encryption status"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('groupA', user.securityGroups)"
          - expr: "user.jobTitle === 'Senior Developer'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.accessAuditStatus === 'Passed'"
                - expr: "resource.storageTier === 'Standard'"
  Expected: true
  Explanation: "The user belongs to security group A, has the correct job title, the resource is encrypted, the user is active, and either the access audit passed or the storage tier is standard."

- scenarioID: "234"
  Description: "Complex nested conditions with user salary band, device ID, and resource replication status"
  Condition:
    match:
      all:
        of:
          - expr: "user.salaryBand === 'G8'"
          - expr: "user.deviceId === 'D98765'"
          - none:
              of:
                - expr: "resource.replicationStatus === 'failed'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.retentionPeriodDays > 180"
                - expr: "resource.sharedWith.includes('user101')"
  Expected: true
  Explanation: "The user is in salary band G8, using the correct device, the resource replication is successful, the user is active, and either the retention is long or shared with user101."

- scenarioID: "235"
  Description: "Evaluation of user skills, certifications, and resource storage tier"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('Python', user.skills)"
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - none:
              of:
                - expr: "resource.storageTier === 'Glacier'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.isEncrypted === true"
                - expr: "resource.classificationLevel === 'high'"
  Expected: true
  Explanation: "The user is skilled in Python, certified, the resource is not in Glacier, the user is active, and either the resource is encrypted or highly classified."

- scenarioID: "236"
  Description: "Complex evaluation of user time zone, office location, and resource file permissions"
  Condition:
    match:
      all:
        of:
          - expr: "user.timeZone === 'PST'"
          - expr: "user.officeLocation === 'Building A'"
          - none:
              of:
                - expr: "resource.filePermissions.includes('delete')"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.isVersioned === true"
                - expr: "resource.lastModifiedBy === 'user456'"
  Expected: true
  Explanation: "The user is in PST, works from Building A, the resource does not have delete permissions, the user is active, and either the resource is versioned or was last modified by user456."

- scenarioID: "237"
  Description: "Nested evaluation of user completed trainings, work-from-home eligibility, and resource associated projects"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('security', user.completedTrainings)"
          - expr: "user.workFromHomeEligibility === true"
          - none:
              of:
                - expr: "resource.associatedProjects.includes('ProjectC')"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.complianceStatus === 'Compliant'"
                - expr: "resource.isBackedUp === true"
  Expected: true
  Explanation: "The user completed security training, is eligible to work from home, the resource is not associated with ProjectC, the user is active, and either the resource is compliant or backed up."

- scenarioID: "238"
  Description: "Evaluation of user probation status, security clearance, and resource archive status"
  Condition:
    match:
      all:
        of:
          - expr: "user.probationStatus === 'Completed'"
          - expr: "user.securityClearance === 'top-secret'"
          - none:
              of:
                - expr: "resource.archiveStatus === 'Archived'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.region === 'us-west-2'"
                - expr: "resource.originatingService === 'dataLake'"
  Expected: true
  Explanation: "The user completed probation, has top-secret clearance, the resource is not archived, the user is active, and either the resource is in the correct region or originates from the data lake."

- scenarioID: "239"
  Description: "Complex nested conditions with user certifications, direct reports, and resource backup status"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "user.directReports.length > 1"
          - none:
              of:
                - expr: "resource.isBackedUp === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.replicationStatus === 'completed'"
                - expr: "resource.backupRetentionPeriodDays > 90"
  Expected: true
  Explanation: "The user is certified, has more than one direct report, the resource is backed up, the user is active, and either the replication is completed or the backup retention is over 90 days."

- scenarioID: "240"
  Description: "Evaluation of user device ID, manager, and resource replication status"
  Condition:
    match:
      all:
        of:
          - expr: "user.deviceId === 'D98765'"
          - expr: "user.manager === 'user456'"
          - none:
              of:
                - expr: "resource.replicationStatus === 'failed'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.retentionPeriodDays > 180"
                - expr: "resource.sharedWith.includes('user101')"
  Expected: true
  Explanation: "The user is using the correct device, the manager is correct, the resource replication is successful, the user is active, and either the retention is long or shared with user101."

- scenarioID: "241"
  Description: "Complex nested conditions with user hire date, preferred language, and resource encryption status"
  Condition:
    match:
      all:
        of:
          - expr: "user.hireDate < date('2021-01-01T00:00:00Z')"
          - expr: "user.preferredLanguage === 'en-US'"
          - none:
              of:
                - expr: "resource.isEncrypted === false"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.complianceStatus === 'Compliant'"
                - expr: "resource.backupFrequency === 'Daily'"
  Expected: true
  Explanation: "The user was hired before 2021, prefers English, the resource is encrypted, the user is active, and either the resource is compliant or backed up daily."

- scenarioID: "242"
  Description: "Evaluation of user work-from-home eligibility, manager, and resource compliance status"
  Condition:
    match:
      all:
        of:
          - expr: "user.workFromHomeEligibility === true"
          - expr: "user.manager === 'user456'"
          - none:
              of:
                - expr: "resource.complianceStatus === 'Non-Compliant'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.encryptionType === 'AES-256'"
                - expr: "resource.backupFrequency === 'Daily'"
  Expected: true
  Explanation: "The user is eligible to work from home, has the correct manager, the resource is compliant, the user is active, and either the resource uses AES-256 encryption or is backed up daily."

- scenarioID: "243"
  Description: "Complex nested conditions with user certifications, performance rating, and resource retention period"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('AWS Certified Solutions Architect', user.certifications)"
          - expr: "user.performanceRating === 'Exceeds Expectations'"
          - none:
              of:
                - expr: "resource.retentionPeriodDays < 180"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.replicationStatus === 'completed'"
                - expr: "resource.backupRetentionPeriodDays > 90"
  Expected: true
  Explanation: "The user is certified, has an excellent performance rating, the resource has a long retention period, the user is active, and either the replication is completed or the backup retention is over 90 days."

- scenarioID: "244"
  Description: "Evaluation of user project assignments, office location, and resource archive status"
  Condition:
    match:
      all:
        of:
          - expr: "isIn('ProjectX', user.projectAssignments)"
          - expr: "user.officeLocation === 'Building A'"
          - none:
              of:
                - expr: "resource.archiveStatus === 'Archived'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.region === 'us-west-2'"
                - expr: "resource.originatingService === 'dataLake'"
  Expected: true
  Explanation: "The user is assigned to ProjectX, works from Building A, the resource is not archived, the user is active, and either the resource is in the correct region or originates from the data lake."

- scenarioID: "245"
  Description: "Complex evaluation of user job title, completed courses, and resource classification level"
  Condition:
    match:
      all:
        of:
          - expr: "user.jobTitle === 'Senior Developer'"
          - expr: "isIn('Ethics', user.completedCourses)"
          - none:
              of:
                - expr: "resource.classificationLevel === 'low'"
                - expr: "user.isActive === false"
          - any:
              of:
                - expr: "resource.sharedWith.includes('user789')"
                - expr: "resource.retentionPeriodDays > 180"
  Expected: true
  Explanation: "The user is a Senior Developer, completed the Ethics course, the resource is not low classified, the user is active, and either the resource is shared with user789 or has a long retention period."

